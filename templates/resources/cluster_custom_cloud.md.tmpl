---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}

## Example Usage


```terraform
    data "spectrocloud_cloudaccount_custom" "nutanix_account" {
      name  = "test-tf-demo"
      cloud = "nutanix"
    }

    data "spectrocloud_cluster_profile" "profile" {
      name    = "test-tf-ntix-profile"
      context = "tenant"
    }


    resource "spectrocloud_cluster_custom_cloud" "cluster_nutanix" {
      name             = local.cloud_config_override_variables.CLUSTER_NAME
      cloud            = "nutanix"
      context          = "tenant"
      tags             = ["dev", "department:tf", "owner:admin"]
      description      = "The nutanix cluster with k8 infra profile test"
      cloud_account_id = data.spectrocloud_cloudaccount_custom.nutanix_account.id
      apply_setting    = "DownloadAndInstall"
      cluster_profile {
        id = data.spectrocloud_cluster_profile.profile.id
      }

      cloud_config {
        values = templatefile("config_templates/cloud_config.yaml", local.cloud_config_override_variables)
      }

      machine_pool {
        additional_labels = {
          "owner"   = "tf"
          "purpose" = "testing"
          "type"    = "cp"
        }
        control_plane           = true
        control_plane_as_worker = true
        node_pool_config        = templatefile("config_templates/master_pool_config.yaml", local.node_pool_config_variables)
      }

      machine_pool {
        additional_labels = {
          "owner"   = "tf"
          "purpose" = "testing"
          "type"    = "worker"
        }
        control_plane           = false
        control_plane_as_worker = false
        taints {
          key    = "taintkey2"
          value  = "taintvalue2"
          effect = "NoSchedule"
        }
        node_pool_config = templatefile("config_templates/worker_pool_config.yaml", local.node_pool_config_variables)
      }

      cluster_rbac_binding {
        type = "ClusterRoleBinding"

        role = {
          kind = "ClusterRole"
          name = "testRole3"
        }
        subjects {
          type = "User"
          name = "testRoleUser3"
        }
        subjects {
          type = "Group"
          name = "testRoleGroup3"
        }
        subjects {
          type      = "ServiceAccount"
          name      = "testrolesubject3"
          namespace = "testrolenamespace"
        }
      }

      namespaces {
        name = "test5ns"
        resource_allocation = {
          cpu_cores  = "2"
          memory_MiB = "2048"
        }
      }
      backup_policy {
        schedule                  = "0 0 * * SUN"
        backup_location_id        = "test-backup-uid"
        prefix                    = "prod-backup"
        expiry_in_hour            = 7200
        include_disks             = false
        include_cluster_resources = true
      }

      scan_policy {
        configuration_scan_schedule = "0 0 * * SUN"
        penetration_scan_schedule   = "0 0 * * SUN"
        conformance_scan_schedule   = "0 0 1 * *"
      }

      pause_agent_upgrades = "lock"
      os_patch_on_boot  = true
      os_patch_schedule = "0 0 * * SUN"
      os_patch_after    = "2025-02-14T13:09:21+05:30"
      skip_completion   = true
      force_delete      = true
    }
```

{{ .SchemaMarkdown | trimspace }}