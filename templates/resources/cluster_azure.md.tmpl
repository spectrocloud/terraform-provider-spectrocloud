---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}

## Example Usage

```terraform
data "spectrocloud_cloudaccount_azure" "account" {
  # id = <uid>
  name = var.cluster_cloud_account_name
}

data "spectrocloud_cluster_profile" "profile" {
  # id = <uid>
  name = var.cluster_cluster_profile_name
}

resource "spectrocloud_cluster_azure" "cluster" {
  name             = var.cluster_name
  tags             = ["dev", "department:devops", "owner:bob"]
  cloud_account_id = data.spectrocloud_cloudaccount_azure.account.id

  cloud_config {
    subscription_id = var.azure_subscription_id
    resource_group  = var.azure_resource_group
    region          = var.azure_region
    ssh_key         = var.cluster_ssh_public_key

     //Static placement config
        #    network_resource_group = "test-resource-group"
        #    virtual_network_name = "test-network-name"
        #    virtual_network_cidr_block = "10.0.0.9/10"
        #    control_plane_subnet {
        #      name="cp_subnet_name"
        #      cidr_block="10.0.0.9/16"
        #      security_group_name="cp_subnet_security_name"
        #    }
        #    worker_node_subnet {
        #      name="worker_subnet_name"
        #      cidr_block="10.0.0.9/16"
        #      security_group_name="worker_subnet_security_name"
        #    }
        #    private_api_server {
        #      resource_group = "test-resource-group"
        #      private_dns_zone = "test-private-dns-zone"
        #      static_ip = "10.11.12.51"
        #    }
  }

  cluster_profile {
    id = data.spectrocloud_cluster_profile.profile.id

    # To override or specify values for a cluster:

    # pack {
    #   name   = "spectro-byo-manifest"
    #   tag    = "1.0.x"
    #   values = <<-EOT
    #     manifests:
    #       byo-manifest:
    #         contents: |
    #           # Add manifests here
    #           apiVersion: v1
    #           kind: Namespace
    #           metadata:
    #             labels:
    #               app: wordpress
    #               app2: wordpress2
    #             name: wordpress
    #   EOT
    # }
  }

  machine_pool {
    control_plane           = true
    control_plane_as_worker = true
    name                    = "cp-pool"
    count                   = 1
    instance_type           = "Standard_D2_v3"
    azs                     = [""]
    disk {
      size_gb = 65
      type    = "Standard_LRS"
    }
  }

  machine_pool {
    name          = "worker-basic"
    count         = 1
    instance_type = "Standard_D2_v3"
    azs           = [""]
  }

}
```
## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import)
to import the resource {{ .Name }} by using its `id` with the Palette `context` separated by a colon. For example:

```terraform
import {
  to = {{ .Name }}.example
  id = "example_id:context"
}
```

Using `terraform import`, import the cluster using the `id` colon separated with `context`. For example:

```console
terraform import {{ .Name }}.example example_id:project
```

Refer to the [Import section](/docs#import) to learn more.


{{ .SchemaMarkdown | trimspace }}