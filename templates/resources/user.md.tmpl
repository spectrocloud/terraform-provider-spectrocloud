---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}

You can learn more about managing users in Palette by reviewing the [Users](https://docs.spectrocloud.com/user-management/) guide.

## Example Usage

An example of creating a user resource with assigned teams and custom roles in Palette.

```hcl
resource "spectrocloud_user" "user-test"{
  first_name = "tf"
  last_name = "test"
  email = "test-tf@spectrocloud.com"
  team_ids  = [data.spectrocloud_team.team2.id]
  project_role {
    project_id = data.spectrocloud_project.default.id
    role_ids =  [for r in data.spectrocloud_role.app_roles : r.id]
  }
  project_role {
    project_id = data.spectrocloud_project.ranjith.id
    role_ids = [for r in data.spectrocloud_role.app_roles : r.id]
  }

  tenant_role = [for t in data.spectrocloud_role.tenant_roles : t.id]

  workspace_role {
    project_id = data.spectrocloud_project.default.id
    workspace {
      id = data.spectrocloud_workspace.workspace.id
      role_ids = [for w in data.spectrocloud_role.workspace_roles : w.id]
    }
    workspace {
      id = data.spectrocloud_workspace.workspace2.id
      role_ids = ["66fbea622947f81fc26983e6"]
    }
  }

  resource_role {
    project_ids = [data.spectrocloud_project.default.id, data.spectrocloud_project.ranjith.id]
    filter_ids = [data.spectrocloud_filter.filter.id]
    role_ids = [for r in data.spectrocloud_role.resource_roles : r.id]
  }

  resource_role {
    project_ids = [data.spectrocloud_project.ranjith.id]
    filter_ids = [data.spectrocloud_filter.filter.id]
    role_ids = [for re in data.spectrocloud_role.resource_roles_editor : re.id]
  }

}
```

The example below demonstrates how to create an user with only assigned teams.

```hcl
resource "spectrocloud_user" "user-test"{
  first_name = "tf"
  last_name = "test"
  email = "test-tf@spectrocloud.com"
  team_ids  = [data.spectrocloud_team.team2.id]
}


```

### Importing existing user states

```hcl
# import existing user example
  import {
    to = spectrocloud_user.test_user
    id = "{userUID}"
  }

# To generate TF configuration.
  terraform plan -generate-config-out=test_user.tf

# To import State file
  terraform import spectrocloud_user.test_user {userUID}
```


{{ .SchemaMarkdown | trimspace }}